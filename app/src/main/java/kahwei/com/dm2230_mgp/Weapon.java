package kahwei.com.dm2230_mgp;

import android.graphics.Bitmap;

import java.util.ArrayList;
import java.util.Random;

import kahwei.com.dm2230_mgp.Object.Vector3;

/**
 * Created by xecli on 12/5/2015.
 */
public class Weapon
{
    private static Random RNG = new Random();
    public static final int MAX_POWER_LEVEL = 3;
    private float m_fireRate[];     // The time between shots
    private float m_deltaShots = 0.0f;
    protected Bitmap m_bulletTex[];     // The texture of bullets generated by this weapon
    private int m_powerLevel = 1;
    protected ArrayList<Vector3> m_bulletVelocities;

    public Weapon()
    {
        // Initialize the delta shots
        m_fireRate = new float[MAX_POWER_LEVEL];
        for (float f : m_fireRate)
        {
            f = 0.0f;
        }

        // Initialize the Texture Array
        m_bulletTex = new Bitmap[MAX_POWER_LEVEL];

        // Initialize the Bullet Velocity List
        m_bulletVelocities = new ArrayList<Vector3>();
    }

    public void Update(final double deltaTime)
    {
        m_deltaShots += deltaTime;
    }

    public boolean Shoot()
    {
        if (m_deltaShots > m_fireRate[m_powerLevel])
        {
            m_deltaShots = 0.0f;
            return true;
        }

        return false;
    }

    public void SetFireRate(float roundsPerMinuteR1, float roundsPerMinuteR2, float roundsPerMinuteR3)
    {
        m_fireRate[0] = 1 / (roundsPerMinuteR1 / 60);
        m_fireRate[1] = 1 / (roundsPerMinuteR2 / 60);
        m_fireRate[2] = 1 / (roundsPerMinuteR3 / 60);
    }

    public void ResetLevel()
    {
        m_powerLevel = 1;
    }

    public void LevelUp()
    {
        m_powerLevel = m_powerLevel++ % MAX_POWER_LEVEL;
    }

    public Bitmap GetBulletTexture()
    {
        return m_bulletTex[m_powerLevel];
    }

    public int GetPowerLevel()
    {
        return m_powerLevel;
    }

    public Vector3 GetBulletVelocity()
    {
        int indexToReturn = RNG.nextInt() % (m_bulletVelocities.size());
        return m_bulletVelocities.get(indexToReturn);
    }
}